desc: (none)
cmd: target/debug/historical_options_consumer
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=444611
mem_heap_B=472
mem_heap_extra_B=16
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=768239
mem_heap_B=36440
mem_heap_extra_B=616
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=1082937
mem_heap_B=61400
mem_heap_extra_B=648
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=1398221
mem_heap_B=86360
mem_heap_extra_B=680
mem_stacks_B=0
heap_tree=detailed
n3: 86360 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 73960 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 73960 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 71792 0x1ACD5A: allocate (alloc.rs:243)
    n3: 71792 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 49920 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 49920 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 49920 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 49920 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 49920 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 49920 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 49920 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 49920 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 49920 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 49920 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 49920 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 49920 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 49920 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 49920 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 49920 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 49920 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 49920 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 49920 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 49920 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 49920 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 49920 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 49920 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 49920 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 49920 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 49920 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 49920 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 49920 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 49920 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 49920 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 49920 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 49920 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 49920 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 49920 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 32 in 2 places, all below massif's threshold (1.00%)
   n2: 2168 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 1560 0x1D65A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 1560 0x192439: with_capacity_in<tokio::signal::unix::SignalInfo, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 1560 0x192439: with_capacity_in<tokio::signal::unix::SignalInfo, alloc::alloc::Global> (mod.rs:699)
       n1: 1560 0x192439: with_capacity<tokio::signal::unix::SignalInfo> (mod.rs:481)
        n1: 1560 0x192439: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
         n1: 1560 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
          n1: 1560 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
           n1: 1560 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
            n1: 1560 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
             n1: 1560 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
              n1: 1560 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
               n1: 1560 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                n1: 1560 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                 n1: 1560 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                  n1: 1560 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                   n1: 1560 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                    n1: 1560 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                     n1: 1560 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
                      n1: 1560 0x1F3E9F: tokio::runtime::signal::Driver::new (mod.rs:67)
                       n1: 1560 0x19A305: tokio::runtime::driver::create_signal_driver (driver.rs:251)
                        n1: 1560 0x199D69: tokio::runtime::driver::create_io_stack (driver.rs:152)
                         n1: 1560 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
                          n1: 1560 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                           n1: 1560 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                            n1: 1560 0x12D16B: historical_options_consumer::main (main.rs:32)
                             n1: 1560 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                              n1: 1560 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                               n1: 1560 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                                n1: 1560 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                 n1: 1560 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                                  n1: 1560 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                                   n1: 1560 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                                    n1: 1560 0x26D74C: {closure#2} (rt.rs:141)
                                     n1: 1560 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                      n1: 1560 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                       n1: 1560 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                        n1: 1560 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                         n0: 1560 0x12A209: std::rt::lang_start (emit.rs:0)
    n0: 608 in 2 places, all below massif's threshold (1.00%)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 88 in 14 places, all below massif's threshold (1.00%)
#-----------
snapshot=5
#-----------
time=1713505
mem_heap_B=111320
mem_heap_extra_B=712
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=6
#-----------
time=1954900
mem_heap_B=127520
mem_heap_extra_B=1048
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=2274299
mem_heap_B=261093
mem_heap_extra_B=3635
mem_stacks_B=0
heap_tree=detailed
n5: 261093 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 7 places, all below massif's threshold (1.00%)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 3820 in 20 places, all below massif's threshold (1.00%)
 n1: 3456 0x40147D9: calloc (rtld-malloc.h:44)
  n1: 3456 0x40147D9: allocate_dtv (dl-tls.c:375)
   n1: 3456 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
    n1: 3456 0x50A47B4: allocate_stack (allocatestack.c:430)
     n1: 3456 0x50A47B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
      n1: 3456 0x278F11: std::sys::pal::unix::thread::Thread::new (thread.rs:87)
       n1: 3456 0x1BB4A4: std::thread::Builder::spawn_unchecked_ (mod.rs:581)
        n1: 3456 0x1BAAAE: std::thread::Builder::spawn_unchecked (mod.rs:456)
         n1: 3456 0x1BBEBD: std::thread::Builder::spawn (mod.rs:388)
          n1: 3456 0x1F672B: tokio::runtime::blocking::pool::Spawner::spawn_thread (pool.rs:473)
           n1: 3456 0x1F5FF8: tokio::runtime::blocking::pool::Spawner::spawn_task (pool.rs:423)
            n1: 3456 0x1F5AFF: tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (pool.rs:391)
             n1: 3456 0x1F5349: tokio::runtime::blocking::pool::Spawner::spawn_blocking (pool.rs:306)
              n1: 3456 0x1A343C: tokio::runtime::handle::Handle::spawn_blocking (handle.rs:224)
               n1: 3456 0x1F474A: tokio::runtime::blocking::pool::spawn_blocking (pool.rs:184)
                n1: 3456 0x1EF555: tokio::runtime::scheduler::multi_thread::worker::Launch::launch (worker.rs:462)
                 n1: 3456 0x1BF2AA: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1287)
                  n1: 3456 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                   n1: 3456 0x12D16B: historical_options_consumer::main (main.rs:32)
                    n1: 3456 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                     n1: 3456 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                      n1: 3456 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                       n1: 3456 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                        n1: 3456 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                         n1: 3456 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                          n1: 3456 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                           n1: 3456 0x26D74C: {closure#2} (rt.rs:141)
                            n1: 3456 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                             n1: 3456 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                              n1: 3456 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                               n1: 3456 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                n1: 3456 0x12A209: std::rt::lang_start (emit.rs:0)
                                 n0: 3456 0x12D27D: main (lib.rs:0)
#-----------
snapshot=8
#-----------
time=2644980
mem_heap_B=264599
mem_heap_extra_B=4345
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=9
#-----------
time=2930032
mem_heap_B=264893
mem_heap_extra_B=5235
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=10
#-----------
time=3290778
mem_heap_B=267194
mem_heap_extra_B=6342
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=3606555
mem_heap_B=271375
mem_heap_extra_B=7297
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=4086673
mem_heap_B=271886
mem_heap_extra_B=8786
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=4590564
mem_heap_B=280095
mem_heap_extra_B=10337
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=4944578
mem_heap_B=280464
mem_heap_extra_B=11432
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=5149113
mem_heap_B=280680
mem_heap_extra_B=12064
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=5509176
mem_heap_B=281063
mem_heap_extra_B=13169
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=5869229
mem_heap_B=281445
mem_heap_extra_B=14275
mem_stacks_B=0
heap_tree=detailed
n7: 281445 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 15360 0x186B74: realloc (alloc.rs:138)
  n1: 15360 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 15360 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 15360 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 15360 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 15360 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 15360 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 15360 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 15360 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 15360 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 15360 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 15360 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 15360 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 15360 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 15360 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 15360 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 15360 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 15360 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 15360 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 15360 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 15360 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 15360 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 15360 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 15360 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 15360 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 15360 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 15360 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 15360 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 15360 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 15360 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 15360 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 15360 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 15360 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 5204 in 21 places, all below massif's threshold (1.00%)
 n1: 3608 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 3608 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 3608 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 3608 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 3608 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 3608 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 3608 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 3608 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 3608 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 3608 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 3608 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 3608 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 3608 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 3608 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 3608 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 3608 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 3608 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 3608 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 3608 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 3608 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 3608 in 20 places, all below massif's threshold (1.00%)
 n1: 3456 0x40147D9: calloc (rtld-malloc.h:44)
  n1: 3456 0x40147D9: allocate_dtv (dl-tls.c:375)
   n1: 3456 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
    n1: 3456 0x50A47B4: allocate_stack (allocatestack.c:430)
     n1: 3456 0x50A47B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
      n1: 3456 0x278F11: std::sys::pal::unix::thread::Thread::new (thread.rs:87)
       n1: 3456 0x1BB4A4: std::thread::Builder::spawn_unchecked_ (mod.rs:581)
        n1: 3456 0x1BAAAE: std::thread::Builder::spawn_unchecked (mod.rs:456)
         n1: 3456 0x1BBEBD: std::thread::Builder::spawn (mod.rs:388)
          n1: 3456 0x1F672B: tokio::runtime::blocking::pool::Spawner::spawn_thread (pool.rs:473)
           n1: 3456 0x1F5FF8: tokio::runtime::blocking::pool::Spawner::spawn_task (pool.rs:423)
            n1: 3456 0x1F5AFF: tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (pool.rs:391)
             n1: 3456 0x1F5349: tokio::runtime::blocking::pool::Spawner::spawn_blocking (pool.rs:306)
              n1: 3456 0x1A343C: tokio::runtime::handle::Handle::spawn_blocking (handle.rs:224)
               n1: 3456 0x1F474A: tokio::runtime::blocking::pool::spawn_blocking (pool.rs:184)
                n1: 3456 0x1EF555: tokio::runtime::scheduler::multi_thread::worker::Launch::launch (worker.rs:462)
                 n1: 3456 0x1BF2AA: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1287)
                  n1: 3456 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                   n1: 3456 0x12D16B: historical_options_consumer::main (main.rs:32)
                    n1: 3456 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                     n1: 3456 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                      n1: 3456 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                       n1: 3456 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                        n1: 3456 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                         n1: 3456 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                          n1: 3456 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                           n1: 3456 0x26D74C: {closure#2} (rt.rs:141)
                            n1: 3456 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                             n1: 3456 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                              n1: 3456 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                               n1: 3456 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                n1: 3456 0x12A209: std::rt::lang_start (emit.rs:0)
                                 n0: 3456 0x12D27D: main (lib.rs:0)
#-----------
snapshot=18
#-----------
time=6384888
mem_heap_B=281988
mem_heap_extra_B=15860
mem_stacks_B=0
heap_tree=detailed
n7: 281988 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 15360 0x186B74: realloc (alloc.rs:138)
  n1: 15360 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 15360 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 15360 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 15360 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 15360 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 15360 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 15360 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 15360 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 15360 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 15360 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 15360 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 15360 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 15360 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 15360 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 15360 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 15360 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 15360 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 15360 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 15360 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 15360 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 15360 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 15360 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 15360 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 15360 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 15360 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 15360 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 15360 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 15360 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 15360 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 15360 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 15360 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 15360 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 5204 in 21 places, all below massif's threshold (1.00%)
 n1: 4151 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 4151 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 4151 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 4151 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 4151 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 4151 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 4151 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 4151 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 4151 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 4151 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 4151 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 4151 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 4151 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 4151 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 4151 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 4151 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 4151 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 4151 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 4151 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 4151 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 4151 in 20 places, all below massif's threshold (1.00%)
 n1: 3456 0x40147D9: calloc (rtld-malloc.h:44)
  n1: 3456 0x40147D9: allocate_dtv (dl-tls.c:375)
   n1: 3456 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
    n1: 3456 0x50A47B4: allocate_stack (allocatestack.c:430)
     n1: 3456 0x50A47B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
      n1: 3456 0x278F11: std::sys::pal::unix::thread::Thread::new (thread.rs:87)
       n1: 3456 0x1BB4A4: std::thread::Builder::spawn_unchecked_ (mod.rs:581)
        n1: 3456 0x1BAAAE: std::thread::Builder::spawn_unchecked (mod.rs:456)
         n1: 3456 0x1BBEBD: std::thread::Builder::spawn (mod.rs:388)
          n1: 3456 0x1F672B: tokio::runtime::blocking::pool::Spawner::spawn_thread (pool.rs:473)
           n1: 3456 0x1F5FF8: tokio::runtime::blocking::pool::Spawner::spawn_task (pool.rs:423)
            n1: 3456 0x1F5AFF: tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (pool.rs:391)
             n1: 3456 0x1F5349: tokio::runtime::blocking::pool::Spawner::spawn_blocking (pool.rs:306)
              n1: 3456 0x1A343C: tokio::runtime::handle::Handle::spawn_blocking (handle.rs:224)
               n1: 3456 0x1F474A: tokio::runtime::blocking::pool::spawn_blocking (pool.rs:184)
                n1: 3456 0x1EF555: tokio::runtime::scheduler::multi_thread::worker::Launch::launch (worker.rs:462)
                 n1: 3456 0x1BF2AA: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1287)
                  n1: 3456 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                   n1: 3456 0x12D16B: historical_options_consumer::main (main.rs:32)
                    n1: 3456 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                     n1: 3456 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                      n1: 3456 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                       n1: 3456 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                        n1: 3456 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                         n1: 3456 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                          n1: 3456 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                           n1: 3456 0x26D74C: {closure#2} (rt.rs:141)
                            n1: 3456 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                             n1: 3456 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                              n1: 3456 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                               n1: 3456 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                n1: 3456 0x12A209: std::rt::lang_start (emit.rs:0)
                                 n0: 3456 0x12D27D: main (lib.rs:0)
#-----------
snapshot=19
#-----------
time=6590082
mem_heap_B=297565
mem_heap_extra_B=16491
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=20
#-----------
time=6950198
mem_heap_B=297947
mem_heap_extra_B=17597
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=21
#-----------
time=7310292
mem_heap_B=298327
mem_heap_extra_B=18705
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=22
#-----------
time=7658316
mem_heap_B=298691
mem_heap_extra_B=19781
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=8138407
mem_heap_B=299204
mem_heap_extra_B=21252
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=24
#-----------
time=8618494
mem_heap_B=299713
mem_heap_extra_B=22743
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=9098634
mem_heap_B=300221
mem_heap_extra_B=24219
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=26
#-----------
time=9578732
mem_heap_B=300731
mem_heap_extra_B=25693
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=10058820
mem_heap_B=301241
mem_heap_extra_B=27167
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=10347203
mem_heap_B=332273
mem_heap_extra_B=28039
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=10827340
mem_heap_B=332782
mem_heap_extra_B=29514
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=11307437
mem_heap_B=333295
mem_heap_extra_B=30985
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=11787512
mem_heap_B=333807
mem_heap_extra_B=32457
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=12267598
mem_heap_B=334317
mem_heap_extra_B=33931
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=12682746
mem_heap_B=334745
mem_heap_extra_B=35207
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=12958293
mem_heap_B=335055
mem_heap_extra_B=36049
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=13507722
mem_heap_B=335631
mem_heap_extra_B=37745
mem_stacks_B=0
heap_tree=detailed
n6: 335631 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 61440 0x186B74: realloc (alloc.rs:138)
  n1: 61440 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 61440 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 61440 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 61440 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 61440 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 61440 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 61440 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 61440 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 61440 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 61440 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 61440 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 61440 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 61440 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 61440 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 61440 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 61440 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 61440 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 61440 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 61440 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 61440 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 61440 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 61440 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 61440 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 61440 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 61440 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 61440 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 61440 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 61440 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 61440 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 61440 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 61440 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 61440 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n1: 11714 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 11714 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 11714 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 11714 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 11714 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 11714 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 11714 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 11714 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 11714 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 11714 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 11714 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 11714 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 11714 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 11714 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 11714 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 11714 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 11714 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 11714 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 11714 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 11714 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 11714 in 20 places, all below massif's threshold (1.00%)
 n0: 8660 in 22 places, all below massif's threshold (1.00%)
#-----------
snapshot=36
#-----------
time=14061849
mem_heap_B=336223
mem_heap_extra_B=39441
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=14477463
mem_heap_B=336649
mem_heap_extra_B=40719
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=14752553
mem_heap_B=336948
mem_heap_extra_B=41572
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=15164831
mem_heap_B=337385
mem_heap_extra_B=42839
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=15718808
mem_heap_B=337979
mem_heap_extra_B=44533
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=41
#-----------
time=16268246
mem_heap_B=338556
mem_heap_extra_B=46228
mem_stacks_B=0
heap_tree=detailed
n6: 338556 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 61440 0x186B74: realloc (alloc.rs:138)
  n1: 61440 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 61440 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 61440 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 61440 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 61440 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 61440 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 61440 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 61440 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 61440 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 61440 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 61440 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 61440 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 61440 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 61440 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 61440 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 61440 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 61440 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 61440 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 61440 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 61440 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 61440 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 61440 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 61440 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 61440 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 61440 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 61440 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 61440 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 61440 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 61440 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 61440 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 61440 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 61440 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 14639 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 14639 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 14639 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 14639 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 14639 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 14639 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 14639 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 14639 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 14639 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 14639 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 14639 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 14639 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 14639 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 14639 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 14639 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 14639 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 14639 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 14639 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 14639 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 14639 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 14639 in 20 places, all below massif's threshold (1.00%)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 8660 in 22 places, all below massif's threshold (1.00%)
#-----------
snapshot=42
#-----------
time=16547052
mem_heap_B=338854
mem_heap_extra_B=47082
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=16822393
mem_heap_B=339151
mem_heap_extra_B=47921
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=17238032
mem_heap_B=339581
mem_heap_extra_B=49195
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=17513096
mem_heap_B=339880
mem_heap_extra_B=50048
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=17925391
mem_heap_B=340316
mem_heap_extra_B=51316
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=18204605
mem_heap_B=402039
mem_heap_extra_B=52169
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=18755675
mem_heap_B=402638
mem_heap_extra_B=53858
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=19170233
mem_heap_B=403067
mem_heap_extra_B=55133
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=19377716
mem_heap_B=403300
mem_heap_extra_B=55772
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=19583665
mem_heap_B=403521
mem_heap_extra_B=56399
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=52
#-----------
time=19788450
mem_heap_B=403734
mem_heap_extra_B=57034
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=53
#-----------
time=19999354
mem_heap_B=403950
mem_heap_extra_B=57674
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=20206595
mem_heap_B=404176
mem_heap_extra_B=58320
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=20413018
mem_heap_B=404401
mem_heap_extra_B=58943
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=20622425
mem_heap_B=404612
mem_heap_extra_B=59604
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=20829994
mem_heap_B=404833
mem_heap_extra_B=60239
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=21036273
mem_heap_B=405056
mem_heap_extra_B=60864
mem_stacks_B=0
heap_tree=detailed
n6: 405056 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 122880 0x186B74: realloc (alloc.rs:138)
  n1: 122880 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 122880 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 122880 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 122880 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 122880 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 122880 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 122880 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 122880 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 122880 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 122880 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 122880 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 122880 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 122880 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 122880 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 122880 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 122880 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 122880 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 122880 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 122880 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 122880 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 122880 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 122880 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 122880 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 122880 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 122880 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 122880 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 122880 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 122880 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 122880 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 122880 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 122880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 122880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 19699 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 19699 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 19699 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 19699 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 19699 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 19699 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 19699 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 19699 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 19699 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 19699 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 19699 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 19699 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 19699 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 19699 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 19699 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 19699 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 19699 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 19699 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 19699 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 19699 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 19699 in 20 places, all below massif's threshold (1.00%)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 8660 in 22 places, all below massif's threshold (1.00%)
#-----------
snapshot=59
#-----------
time=21246646
mem_heap_B=405285
mem_heap_extra_B=61507
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=21456346
mem_heap_B=405485
mem_heap_extra_B=62163
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=21664423
mem_heap_B=405725
mem_heap_extra_B=62795
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=21870340
mem_heap_B=405946
mem_heap_extra_B=63422
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=63
#-----------
time=22074942
mem_heap_B=406162
mem_heap_extra_B=64054
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=22279889
mem_heap_B=406370
mem_heap_extra_B=64678
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=22487219
mem_heap_B=406596
mem_heap_extra_B=65324
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=66
#-----------
time=22693547
mem_heap_B=406820
mem_heap_extra_B=65948
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=22903014
mem_heap_B=407028
mem_heap_extra_B=66612
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=23110516
mem_heap_B=407251
mem_heap_extra_B=67245
mem_stacks_B=0
heap_tree=detailed
n6: 407251 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 122880 0x186B74: realloc (alloc.rs:138)
  n1: 122880 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 122880 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 122880 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 122880 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 122880 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 122880 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 122880 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 122880 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 122880 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 122880 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 122880 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 122880 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 122880 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 122880 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 122880 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 122880 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 122880 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 122880 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 122880 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 122880 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 122880 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 122880 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 122880 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 122880 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 122880 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 122880 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 122880 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 122880 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 122880 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 122880 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 122880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 122880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 21894 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 21894 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 21894 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 21894 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 21894 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 21894 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 21894 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 21894 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 21894 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 21894 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 21894 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 21894 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 21894 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 21894 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 21894 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 21894 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 21894 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 21894 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 21894 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 21894 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 21894 in 20 places, all below massif's threshold (1.00%)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 8660 in 22 places, all below massif's threshold (1.00%)
#-----------
snapshot=69
#-----------
time=23316824
mem_heap_B=407473
mem_heap_extra_B=67871
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=23527177
mem_heap_B=407701
mem_heap_extra_B=68515
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=23736927
mem_heap_B=407903
mem_heap_extra_B=69169
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=72
#-----------
time=23944952
mem_heap_B=408140
mem_heap_extra_B=69804
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=73
#-----------
time=24150950
mem_heap_B=408359
mem_heap_extra_B=70433
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=74
#-----------
time=24361511
mem_heap_B=408586
mem_heap_extra_B=71078
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=75
#-----------
time=24566161
mem_heap_B=408785
mem_heap_extra_B=71711
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=76
#-----------
time=24773789
mem_heap_B=409017
mem_heap_extra_B=72351
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=77
#-----------
time=24979553
mem_heap_B=409239
mem_heap_extra_B=72977
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=78
#-----------
time=25189805
mem_heap_B=409455
mem_heap_extra_B=73633
mem_stacks_B=0
heap_tree=detailed
n6: 409455 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 122880 0x186B74: realloc (alloc.rs:138)
  n1: 122880 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 122880 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 122880 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 122880 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 122880 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 122880 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 122880 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 122880 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 122880 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 122880 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 122880 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 122880 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 122880 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 122880 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 122880 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 122880 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 122880 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 122880 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 122880 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 122880 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 122880 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 122880 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 122880 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 122880 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 122880 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 122880 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 122880 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 122880 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 122880 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 122880 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 122880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 122880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 24098 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 24098 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 24098 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24098 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24098 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24098 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 24098 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 24098 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 24098 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 24098 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 24098 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 24098 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 24098 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 24098 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 24098 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 24098 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 24098 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 24098 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 24098 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 24098 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 24098 in 20 places, all below massif's threshold (1.00%)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 8660 in 22 places, all below massif's threshold (1.00%)
#-----------
snapshot=79
#-----------
time=25400637
mem_heap_B=409668
mem_heap_extra_B=74276
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=80
#-----------
time=25607892
mem_heap_B=409895
mem_heap_extra_B=74921
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=81
#-----------
time=25814275
mem_heap_B=410121
mem_heap_extra_B=75543
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=82
#-----------
time=26558464
mem_heap_B=410724
mem_heap_extra_B=76156
mem_stacks_B=0
heap_tree=peak
n6: 410724 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 130048 0x1ACE1A: alloc::alloc::alloc (alloc.rs:100)
  n2: 130048 0x1ACF04: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 101480 0x1ACD5A: allocate (alloc.rs:243)
    n3: 101480 0x1ACD5A: alloc::alloc::exchange_malloc (alloc.rs:332)
     n1: 74880 0x1E25AC: new<[tokio::runtime::time::wheel::level::Level; 6]> (boxed.rs:259)
      n1: 74880 0x1E25AC: tokio::runtime::time::wheel::Wheel::new (mod.rs:57)
       n1: 74880 0x1F35E0: tokio::runtime::time::Driver::new::{{closure}} (mod.rs:145)
        n1: 74880 0x19386C: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
         n1: 74880 0x1B6A1F: core::iter::traits::iterator::Iterator::fold (iterator.rs:2589)
          n1: 74880 0x1920BD: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
           n1: 74880 0x193740: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
            n1: 74880 0x194A91: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
             n1: 74880 0x1968D6: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
              n1: 74880 0x1926FF: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
               n1: 74880 0x1968F9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                n1: 74880 0x19680D: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                 n1: 74880 0x1936B9: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                  n1: 74880 0x1F336D: tokio::runtime::time::Driver::new (mod.rs:144)
                   n1: 74880 0x19A5D9: tokio::runtime::driver::create_time_driver (driver.rs:314)
                    n1: 74880 0x19973C: tokio::runtime::driver::Driver::new (driver.rs:53)
                     n1: 74880 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
                      n1: 74880 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
                       n1: 74880 0x12D16B: historical_options_consumer::main (main.rs:32)
                        n1: 74880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                         n1: 74880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                          n1: 74880 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                           n1: 74880 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                            n1: 74880 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                             n1: 74880 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                              n1: 74880 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                               n1: 74880 0x26D74C: {closure#2} (rt.rs:141)
                                n1: 74880 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                                 n1: 74880 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                                  n1: 74880 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                   n1: 74880 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                    n1: 74880 0x12A209: std::rt::lang_start (emit.rs:0)
                                     n0: 74880 0x12D27D: main (lib.rs:0)
     n1: 21840 0x18CD75: new<alloc::sync::ArcInner<tokio::sync::watch::Shared<()>>> (boxed.rs:259)
      n1: 21840 0x18CD75: alloc::sync::Arc<T>::new (sync.rs:393)
       n1: 21840 0x19BBB1: tokio::sync::watch::channel (watch.rs:503)
        n1: 21840 0x1CAD0F: <tokio::signal::registry::EventInfo as core::default::Default>::default (registry.rs:20)
         n1: 21840 0x1CF82B: <tokio::signal::unix::SignalInfo as core::default::Default>::default (unix.rs:227)
          n1: 21840 0x1CF729: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init::{{closure}} (unix.rs:33)
           n1: 21840 0x193909: core::iter::adapters::map::map_fold::{{closure}} (map.rs:89)
            n2: 21840 0x19CA82: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (try_trait.rs:390)
             n1: 21504 0x1B0470: <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_try_fold (range.rs:1184)
              n1: 21504 0x1B65A4: try_fold<i32, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), i32, core::iter::adapters::map::map_fold::{closure_env#0}<i32, tokio::signal::unix::SignalInfo, (), tokio::signal::unix::{impl#0}::init::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::vec::{impl#20}::extend_trusted::{closure_env#0}<tokio::signal::unix::SignalInfo, alloc::alloc::Global, core::iter::adapters::map::Map<core::ops::range::RangeInclusive<i32>, tokio::signal::unix::{impl#0}::init::{closure_env#0}>>>>>, core::ops::try_trait::NeverShortCircuit<()>> (range.rs:1309)
               n1: 21504 0x1B65A4: core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::fold (mod.rs:378)
                n1: 21504 0x19210C: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (map.rs:129)
                 n1: 21504 0x193775: core::iter::traits::iterator::Iterator::for_each (iterator.rs:818)
                  n1: 21504 0x194723: alloc::vec::Vec<T,A>::extend_trusted (mod.rs:3096)
                   n1: 21504 0x1968BA: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend (spec_extend.rs:26)
                    n1: 21504 0x19250C: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:62)
                     n1: 21504 0x19693D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:33)
                      n1: 21504 0x196848: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:2970)
                       n1: 21504 0x1936FD: core::iter::traits::iterator::Iterator::collect (iterator.rs:2005)
                        n1: 21504 0x197FDF: tokio::signal::unix::<impl tokio::signal::registry::Init for alloc::vec::Vec<tokio::signal::unix::SignalInfo>>::init (unix.rs:33)
                         n1: 21504 0x1CB099: tokio::signal::registry::globals_init (registry.rs:158)
                          n1: 21504 0x1B10D0: core::ops::function::FnOnce::call_once (function.rs:250)
                           n1: 21504 0x1B8352: tokio::util::once_cell::OnceCell<T>::do_init::{{closure}} (once_cell.rs:48)
                            n1: 21504 0x1CC097: std::sync::once::Once::call_once::{{closure}} (once.rs:149)
                             n1: 21504 0x199112: std::sys::sync::once::futex::Once::call (futex.rs:124)
                              n1: 21504 0x1CBEEE: std::sync::once::Once::call_once (once.rs:149)
                               n1: 21504 0x1B831F: tokio::util::once_cell::OnceCell<T>::do_init (once_cell.rs:47)
                                n1: 21504 0x1B8286: tokio::util::once_cell::OnceCell<T>::get (once_cell.rs:30)
                                 n0: 21504 0x1CB13C: tokio::signal::registry::globals (registry.rs:169)
             n0: 336 in 1 place, below massif's threshold (1.00%)
     n0: 4760 in 14 places, all below massif's threshold (1.00%)
   n2: 28568 0x1ADB88: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24576 0x1D6246: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24576 0x193DBE: with_capacity_in<tokio::loom::std::unsafe_cell::UnsafeCell<core::mem::maybe_uninit::MaybeUninit<tokio::runtime::task::Notified<alloc::sync::Arc<tokio::runtime::scheduler::multi_thread::handle::Handle, alloc::alloc::Global>>>>, alloc::alloc::Global> (mod.rs:699)
       n1: 24576 0x193DBE: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 24576 0x1C86EE: tokio::runtime::scheduler::multi_thread::queue::local (queue.rs:86)
         n1: 24576 0x1EE60E: tokio::runtime::scheduler::multi_thread::worker::create (worker.rs:257)
          n1: 24576 0x1F30B1: tokio::runtime::scheduler::multi_thread::MultiThread::new (mod.rs:66)
           n1: 24576 0x1BF18B: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1263)
            n1: 24576 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
             n1: 24576 0x12D16B: historical_options_consumer::main (main.rs:32)
              n1: 24576 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
               n1: 24576 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                n1: 24576 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                 n1: 24576 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                  n1: 24576 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                   n1: 24576 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                    n1: 24576 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                     n1: 24576 0x26D74C: {closure#2} (rt.rs:141)
                      n1: 24576 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                       n1: 24576 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                        n1: 24576 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                         n1: 24576 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                          n1: 24576 0x12A209: std::rt::lang_start (emit.rs:0)
                           n0: 24576 0x12D27D: main (lib.rs:0)
    n0: 3992 in 8 places, all below massif's threshold (1.00%)
 n1: 122880 0x186B74: realloc (alloc.rs:138)
  n1: 122880 0x186B74: alloc::alloc::Global::grow_impl (alloc.rs:215)
   n1: 122880 0x186E7F: <alloc::alloc::Global as core::alloc::Allocator>::grow (alloc.rs:268)
    n1: 122880 0x186233: alloc::raw_vec::finish_grow (raw_vec.rs:570)
     n1: 122880 0x18128B: alloc::raw_vec::RawVec<T,A>::grow_amortized (raw_vec.rs:485)
      n1: 122880 0x181906: alloc::raw_vec::RawVec<T,A>::grow_one (raw_vec.rs:364)
       n1: 122880 0x181FBA: alloc::vec::Vec<T,A>::push (mod.rs:1999)
        n1: 122880 0x12B64B: <serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize::VecVisitor<T> as serde::de::Visitor>::visit_seq (impls.rs:1176)
         n1: 122880 0x13732E: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_seq (isle_x64.rs:16843)
          n1: 122880 0x12DD04: serde::de::impls::<impl serde::de::Deserialize for alloc::vec::Vec<T>>::deserialize (impls.rs:1186)
           n1: 122880 0x12A8A4: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (mod.rs:801)
            n1: 122880 0x135FBC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16595)
             n1: 122880 0x135665: serde::de::MapAccess::next_value (mod.rs:1874)
              n1: 122880 0x14235E: <historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize::__Visitor as serde::de::Visitor>::visit_map (types.rs:3)
               n1: 122880 0x1382F8: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_struct (de.rs:1843)
                n1: 122880 0x14343E: historical_options_consumer::models::types::_::<impl serde::de::Deserialize for historical_options_consumer::models::types::HistoricalOptionsResponse>::deserialize (types.rs:3)
                 n1: 122880 0x133FF5: serde_json::de::from_trait (de.rs:2481)
                  n1: 122880 0x13561F: serde_json::de::from_str (isle_x64.rs:16493)
                   n1: 122880 0x12CCA5: historical_options_consumer::prepare_sample_data (main.rs:41)
                    n1: 122880 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
                     n1: 122880 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
                      n1: 122880 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
                       n1: 122880 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
                        n1: 122880 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
                         n1: 122880 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
                          n1: 122880 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                           n1: 122880 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                            n1: 122880 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                             n1: 122880 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                              n1: 122880 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                               n1: 122880 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                                n1: 122880 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                                 n0: 122880 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
 n1: 111457 0x29262F: alloc::raw_vec::finish_grow (raw_vec.rs:0)
  n1: 111457 0x292DDC: grow_amortized<u8, alloc::alloc::Global> (raw_vec.rs:485)
   n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (raw_vec.rs:372)
    n1: 111457 0x292DDC: try_reserve<u8, alloc::alloc::Global> (mod.rs:1039)
     n1: 111457 0x292DDC: alloc::string::String::try_reserve (string.rs:1251)
      n1: 111457 0x270E17: <&std::fs::File as std::io::Read>::read_to_string (fs.rs:832)
       n1: 111457 0x270F45: <std::fs::File as std::io::Read>::read_to_string (fs.rs:926)
        n1: 111457 0x12CB9B: historical_options_consumer::prepare_sample_data (isle_x64.rs:14897)
         n1: 111457 0x146313: historical_options_consumer::main::{{closure}} (main.rs:24)
          n1: 111457 0x145FEE: tokio::runtime::park::CachedParkThread::block_on::{{closure}} (park.rs:281)
           n1: 111457 0x145054: with_budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:107)
            n1: 111457 0x145054: budget<core::task::poll::Poll<core::result::Result<(), anyhow::Error>>, tokio::runtime::park::{impl#4}::block_on::{closure_env#0}<historical_options_consumer::main::{async_block_env#0}>> (coop.rs:73)
             n1: 111457 0x145054: tokio::runtime::park::CachedParkThread::block_on (park.rs:281)
              n1: 111457 0x12C889: tokio::runtime::context::blocking::BlockingRegionGuard::block_on (isle_x64.rs:16533)
               n1: 111457 0x133DBA: tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (isle_x64.rs:16183)
                n1: 111457 0x12977F: tokio::runtime::context::runtime::enter_runtime (emit.rs:1701)
                 n1: 111457 0x133CDC: tokio::runtime::scheduler::multi_thread::MultiThread::block_on (isle_x64.rs:16173)
                  n1: 111457 0x146665: tokio::runtime::runtime::Runtime::block_on_inner (runtime.rs:363)
                   n1: 111457 0x14677A: tokio::runtime::runtime::Runtime::block_on (runtime.rs:335)
                    n1: 111457 0x12D1CB: historical_options_consumer::main (isle_x64.rs:14955)
                     n1: 111457 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                      n1: 111457 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                       n1: 111457 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                        n1: 111457 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                         n1: 111457 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                          n1: 111457 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                           n1: 111457 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                            n1: 111457 0x26D74C: {closure#2} (rt.rs:141)
                             n1: 111457 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                              n1: 111457 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                               n1: 111457 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                                n1: 111457 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                                 n1: 111457 0x12A209: std::rt::lang_start (emit.rs:0)
                                  n0: 111457 0x12D27D: main (lib.rs:0)
 n1: 24967 0x22CB8A: alloc::alloc::alloc (alloc.rs:100)
  n1: 24967 0x22CC74: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n1: 24967 0x22DA58: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 24967 0x226276: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 24967 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 24967 0x23063E: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:699)
       n1: 24967 0x23063E: <T as alloc::slice::hack::ConvertVec>::to_vec (slice.rs:162)
        n1: 24967 0x23163C: to_vec<u8, alloc::alloc::Global> (slice.rs:111)
         n1: 24967 0x23163C: to_vec_in<u8, alloc::alloc::Global> (slice.rs:441)
          n1: 24967 0x23163C: to_vec<u8> (slice.rs:416)
           n1: 24967 0x23163C: to_owned<u8> (slice.rs:823)
            n1: 24967 0x23163C: alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned (str.rs:211)
             n1: 24967 0x22DA80: <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str (impls.rs:607)
              n1: 24967 0x22D3EB: serde::de::Visitor::visit_borrowed_str (mod.rs:1515)
               n1: 24967 0x137A09: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_str (de.rs:1532)
                n1: 24967 0x137B54: <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_string (de.rs:1549)
                 n1: 24967 0x143DA5: serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize (impls.rs:704)
                  n1: 24967 0x12A924: <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize (emit.rs:3671)
                   n1: 24967 0x135EEC: <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed (isle_x64.rs:16614)
                    n1: 24967 0x135645: serde::de::MapAccess::next_value (mod.rs:1874)
                     n0: 24967 in 22 places, all below massif's threshold (1.00%)
 n1: 12312 0x20C4BA: alloc::alloc::alloc (alloc.rs:100)
  n2: 12312 0x20C5A4: alloc::alloc::Global::alloc_impl (alloc.rs:183)
   n2: 12288 0x20C7D8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:243)
    n1: 12288 0x20A7A8: alloc::raw_vec::RawVec<T,A>::try_allocate_in (raw_vec.rs:230)
     n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (raw_vec.rs:158)
      n1: 12288 0x20E66E: with_capacity_in<libc::unix::linux_like::epoll_event, alloc::alloc::Global> (mod.rs:699)
       n1: 12288 0x20E66E: alloc::vec::Vec<T>::with_capacity (mod.rs:481)
        n1: 12288 0x20EA5D: mio::event::events::Events::with_capacity (events.rs:94)
         n1: 12288 0x1AE917: tokio::runtime::io::driver::Driver::new (driver.rs:102)
          n1: 12288 0x199A93: tokio::runtime::driver::create_io_stack (driver.rs:150)
           n1: 12288 0x199525: tokio::runtime::driver::Driver::new (driver.rs:48)
            n1: 12288 0x1BEC81: tokio::runtime::builder::Builder::build_threaded_runtime (builder.rs:1252)
             n1: 12288 0x1BE248: tokio::runtime::builder::Builder::build (builder.rs:699)
              n1: 12288 0x12D16B: historical_options_consumer::main (main.rs:32)
               n1: 12288 0x1335EA: core::ops::function::FnOnce::call_once (lib.rs:0)
                n1: 12288 0x12A87D: std::sys_common::backtrace::__rust_begin_short_backtrace (backtrace.rs:155)
                 n1: 12288 0x12A230: std::rt::lang_start::{{closure}} (emit.rs:3550)
                  n1: 12288 0x26D74C: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 12288 0x26D74C: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:559)
                    n1: 12288 0x26D74C: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:523)
                     n1: 12288 0x26D74C: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:149)
                      n1: 12288 0x26D74C: {closure#2} (rt.rs:141)
                       n1: 12288 0x26D74C: do_call<std::rt::lang_start_internal::{closure_env#2}, isize> (panicking.rs:559)
                        n1: 12288 0x26D74C: try<isize, std::rt::lang_start_internal::{closure_env#2}> (panicking.rs:523)
                         n1: 12288 0x26D74C: catch_unwind<std::rt::lang_start_internal::{closure_env#2}, isize> (panic.rs:149)
                          n1: 12288 0x26D74C: std::rt::lang_start_internal (rt.rs:141)
                           n1: 12288 0x12A209: std::rt::lang_start (emit.rs:0)
                            n0: 12288 0x12D27D: main (lib.rs:0)
    n0: 0 in 1 place, below massif's threshold (1.00%)
   n0: 24 in 1 place, below massif's threshold (1.00%)
 n0: 9060 in 23 places, all below massif's threshold (1.00%)
#-----------
snapshot=83
#-----------
time=26763146
mem_heap_B=403285
mem_heap_extra_B=54499
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=84
#-----------
time=26967945
mem_heap_B=305214
mem_heap_extra_B=48842
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=85
#-----------
time=27172490
mem_heap_B=356139
mem_heap_extra_B=62853
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=86
#-----------
time=27377185
mem_heap_B=348660
mem_heap_extra_B=41244
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=87
#-----------
time=27581890
mem_heap_B=279752
mem_heap_extra_B=19640
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=88
#-----------
time=27796643
mem_heap_B=151316
mem_heap_extra_B=3660
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=89
#-----------
time=28062442
mem_heap_B=153468
mem_heap_extra_B=3692
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=90
#-----------
time=28303743
mem_heap_B=157020
mem_heap_extra_B=3428
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=91
#-----------
time=28509471
mem_heap_B=155028
mem_heap_extra_B=2668
mem_stacks_B=0
heap_tree=empty
